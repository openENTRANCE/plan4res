#/bin/bash

# this scripts launches SSV alone

export P4R_SINGULARITY_IMAGE_PRESERVE=1 # avoid update of the container
export P4R_ENV="../bin/p4r"
export TIME_P4R_ENV="/usr/bin/time -v ${P4R_ENV}"
export PYTHONSCRIPTS="scripts/python/plan4res-scripts/"
export DATA="data/local/"

# DATASET is the name of the directory within data/local
if [ "$1" == "" ] ; then
    echo "provide name of dataset in data/local/"
    read DATASET
else
	echo $1
	DATASET=$1
	echo $DATASET
fi

export INSTANCE="${DATA}${DATASET}/"
export CONFIG="${DATA}${DATASET}/settings/"

# run script to create plan4res input dataset (ZV_ZineValues.csv ...)
# comment if you are using handmade datasets
#${P4R_ENV} python -W ignore ${PYTHONSCRIPTS}CreateInputPlan4res.py /${CONFIG}settingsCreateInputPlan4res_simul.yml ${DATASET}

# run formatting script to create netcdf input files
#${P4R_ENV} python -W ignore ${PYTHONSCRIPTS}format.py /${CONFIG}settings_format_optim.yml /${CONFIG}settingsCreateInputPlan4res_simul.yml ${DATASET}

# update sddp_solver configuration file to account for number of scenarios
current_directory=$(dirname "$(readlink -f "$0")")/../
rowsettings=$(awk -F ':' '$1=="    Scenarios"' $current_directory${CONFIG}settings_format_optim.yml)
StrNbCommas=$(echo $rowsettings | grep -o ',' | wc -l)
let "NbCommas=$StrNbCommas"
newNbScen=`expr $NbCommas + 1`
rowconfig=$(grep "intNbSimulCheckForConv" $current_directory${CONFIG}sddp_solver.txt)
intNbSimulCheckForConv=$(echo "$rowconfig" | cut -d ' ' -f 2-)
let "oldNbScen=$intNbSimulCheckForConv"
echo "number scenarios in sddp_solver.txt: $oldNbScen, replaced by $newNbScen"
toreplace="$oldNbScen"
replacement="$newNbScen"
newrowconfig=${rowconfig/"$toreplace"/"$replacement"}
sed -i "s/$rowconfig/$newrowconfig/g" "$current_directory${CONFIG}sddp_solver.txt"

# run sddp solver
${TIME_P4R_ENV} sddp_solver -S ${CONFIG}sddp_solver.txt -c ${CONFIG} -p ${INSTANCE}nc4_optim/ ${INSTANCE}nc4_optim/SDDPBlock.nc4

# for hotstart (if last run did not converge) use following line instead
#${TIME_P4R_ENV} sddp_solver -l ../cuts.txt -S ${CONFIG}sddp_solver.txt -c ${CONFIG} -p ${INSTANCE}nc4_optim/ ${INSTANCE}nc4_optim/SDDPBlock.nc4

mkdir ../${INSTANCE}results_simul/
mkdir ../${INSTANCE}results_invest/
mv ../Bellman* ../${INSTANCE}
cp ../${INSTANCE}Bellman* ../${INSTANCE}results_invest/
cp ../${INSTANCE}Bellman* ../${INSTANCE}results_simul/
cp ../cuts.txt ../${INSTANCE}
cp ../cuts.txt ../${INSTANCE}results_simul/
cp ../cuts.txt ../${INSTANCE}results_invest/
rm ../regressors.sddp.* ../visited_states.sddp.* ../cuts.sddp* ../uc.lp
cp ../${INSTANCE}cuts.txt ../${INSTANCE}bellmanvalues.csv
cp ../${INSTANCE}BellmanValuesOUT.csv ../${INSTANCE}bellmanvalues.csv
